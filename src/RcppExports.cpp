// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// MartG_TestStatC
double MartG_TestStatC(int n, int k, Eigen::MatrixXd X, Eigen::MatrixXd Xj);
RcppExport SEXP _HDTSA_MartG_TestStatC(SEXP nSEXP, SEXP kSEXP, SEXP XSEXP, SEXP XjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Xj(XjSEXP);
    rcpp_result_gen = Rcpp::wrap(MartG_TestStatC(n, k, X, Xj));
    return rcpp_result_gen;
END_RCPP
}
// MartG_ftC
Eigen::MatrixXd MartG_ftC(int n, int k, int p, int d, Eigen::MatrixXd X, Eigen::MatrixXd Xj);
RcppExport SEXP _HDTSA_MartG_ftC(SEXP nSEXP, SEXP kSEXP, SEXP pSEXP, SEXP dSEXP, SEXP XSEXP, SEXP XjSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Xj(XjSEXP);
    rcpp_result_gen = Rcpp::wrap(MartG_ftC(n, k, p, d, X, Xj));
    return rcpp_result_gen;
END_RCPP
}
// MartG_XiC
Eigen::MatrixXd MartG_XiC(int n, int k, int p, int B, double bn, int ken_sign);
RcppExport SEXP _HDTSA_MartG_XiC(SEXP nSEXP, SEXP kSEXP, SEXP pSEXP, SEXP BSEXP, SEXP bnSEXP, SEXP ken_signSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type bn(bnSEXP);
    Rcpp::traits::input_parameter< int >::type ken_sign(ken_signSEXP);
    rcpp_result_gen = Rcpp::wrap(MartG_XiC(n, k, p, B, bn, ken_sign));
    return rcpp_result_gen;
END_RCPP
}
// MartG_bandwith
double MartG_bandwith(Eigen::MatrixXd ft, int k, int p, int d, int ken_type);
RcppExport SEXP _HDTSA_MartG_bandwith(SEXP ftSEXP, SEXP kSEXP, SEXP pSEXP, SEXP dSEXP, SEXP ken_typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type ft(ftSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type ken_type(ken_typeSEXP);
    rcpp_result_gen = Rcpp::wrap(MartG_bandwith(ft, k, p, d, ken_type));
    return rcpp_result_gen;
END_RCPP
}
// MartG_bootc
std::vector<double> MartG_bootc(const int n, const int k, const int p, const int d, const int B, double bn, int method, Eigen::MatrixXd ft);
RcppExport SEXP _HDTSA_MartG_bootc(SEXP nSEXP, SEXP kSEXP, SEXP pSEXP, SEXP dSEXP, SEXP BSEXP, SEXP bnSEXP, SEXP methodSEXP, SEXP ftSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type n(nSEXP);
    Rcpp::traits::input_parameter< const int >::type k(kSEXP);
    Rcpp::traits::input_parameter< const int >::type p(pSEXP);
    Rcpp::traits::input_parameter< const int >::type d(dSEXP);
    Rcpp::traits::input_parameter< const int >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type bn(bnSEXP);
    Rcpp::traits::input_parameter< int >::type method(methodSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type ft(ftSEXP);
    rcpp_result_gen = Rcpp::wrap(MartG_bootc(n, k, p, d, B, bn, method, ft));
    return rcpp_result_gen;
END_RCPP
}
// sigmak
Eigen::MatrixXd sigmak(Eigen::MatrixXd Y, Eigen::MatrixXd Y_mean, int k, int n);
RcppExport SEXP _HDTSA_sigmak(SEXP YSEXP, SEXP Y_meanSEXP, SEXP kSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Y(YSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Y_mean(Y_meanSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(sigmak(Y, Y_mean, k, n));
    return rcpp_result_gen;
END_RCPP
}
// thresh_C
Eigen::MatrixXd thresh_C(Eigen::MatrixXd sigmaY, Eigen::MatrixXd Y, Eigen::MatrixXd Y_mean, int k, int n, int p, double deltafinal);
RcppExport SEXP _HDTSA_thresh_C(SEXP sigmaYSEXP, SEXP YSEXP, SEXP Y_meanSEXP, SEXP kSEXP, SEXP nSEXP, SEXP pSEXP, SEXP deltafinalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type sigmaY(sigmaYSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Y(YSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type Y_mean(Y_meanSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type deltafinal(deltafinalSEXP);
    rcpp_result_gen = Rcpp::wrap(thresh_C(sigmaY, Y, Y_mean, k, n, p, deltafinal));
    return rcpp_result_gen;
END_RCPP
}
// MatMult
SEXP MatMult(Eigen::MatrixXd A, Eigen::MatrixXd B);
RcppExport SEXP _HDTSA_MatMult(SEXP ASEXP, SEXP BSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type A(ASEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type B(BSEXP);
    rcpp_result_gen = Rcpp::wrap(MatMult(A, B));
    return rcpp_result_gen;
END_RCPP
}
// WN_teststatC
Rcpp::List WN_teststatC(Eigen::MatrixXd X, int n, int p, int k);
RcppExport SEXP _HDTSA_WN_teststatC(SEXP XSEXP, SEXP nSEXP, SEXP pSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(WN_teststatC(X, n, p, k));
    return rcpp_result_gen;
END_RCPP
}
// WN_ftC
Eigen::MatrixXd WN_ftC(int n, int k, int p, Eigen::MatrixXd X, Eigen::MatrixXd X_mean);
RcppExport SEXP _HDTSA_WN_ftC(SEXP nSEXP, SEXP kSEXP, SEXP pSEXP, SEXP XSEXP, SEXP X_meanSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X_mean(X_meanSEXP);
    rcpp_result_gen = Rcpp::wrap(WN_ftC(n, k, p, X, X_mean));
    return rcpp_result_gen;
END_RCPP
}
// WN_XiC
Eigen::MatrixXd WN_XiC(int n, int k, int p, int B, double bn, int ken_sign);
RcppExport SEXP _HDTSA_WN_XiC(SEXP nSEXP, SEXP kSEXP, SEXP pSEXP, SEXP BSEXP, SEXP bnSEXP, SEXP ken_signSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type bn(bnSEXP);
    Rcpp::traits::input_parameter< int >::type ken_sign(ken_signSEXP);
    rcpp_result_gen = Rcpp::wrap(WN_XiC(n, k, p, B, bn, ken_sign));
    return rcpp_result_gen;
END_RCPP
}
// WN_bandwith
double WN_bandwith(Eigen::MatrixXd ft, int k, int p, int ken_type);
RcppExport SEXP _HDTSA_WN_bandwith(SEXP ftSEXP, SEXP kSEXP, SEXP pSEXP, SEXP ken_typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type ft(ftSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type ken_type(ken_typeSEXP);
    rcpp_result_gen = Rcpp::wrap(WN_bandwith(ft, k, p, ken_type));
    return rcpp_result_gen;
END_RCPP
}
// WN_bootc
std::vector<double> WN_bootc(const int n, const int k, const int p, const int B, double bn, int method, Eigen::MatrixXd ft, Eigen::MatrixXd X, Eigen::VectorXd sigma_zero);
RcppExport SEXP _HDTSA_WN_bootc(SEXP nSEXP, SEXP kSEXP, SEXP pSEXP, SEXP BSEXP, SEXP bnSEXP, SEXP methodSEXP, SEXP ftSEXP, SEXP XSEXP, SEXP sigma_zeroSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type n(nSEXP);
    Rcpp::traits::input_parameter< const int >::type k(kSEXP);
    Rcpp::traits::input_parameter< const int >::type p(pSEXP);
    Rcpp::traits::input_parameter< const int >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type bn(bnSEXP);
    Rcpp::traits::input_parameter< int >::type method(methodSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type ft(ftSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type sigma_zero(sigma_zeroSEXP);
    rcpp_result_gen = Rcpp::wrap(WN_bootc(n, k, p, B, bn, method, ft, X, sigma_zero));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_HDTSA_MartG_TestStatC", (DL_FUNC) &_HDTSA_MartG_TestStatC, 4},
    {"_HDTSA_MartG_ftC", (DL_FUNC) &_HDTSA_MartG_ftC, 6},
    {"_HDTSA_MartG_XiC", (DL_FUNC) &_HDTSA_MartG_XiC, 6},
    {"_HDTSA_MartG_bandwith", (DL_FUNC) &_HDTSA_MartG_bandwith, 5},
    {"_HDTSA_MartG_bootc", (DL_FUNC) &_HDTSA_MartG_bootc, 8},
    {"_HDTSA_sigmak", (DL_FUNC) &_HDTSA_sigmak, 4},
    {"_HDTSA_thresh_C", (DL_FUNC) &_HDTSA_thresh_C, 7},
    {"_HDTSA_MatMult", (DL_FUNC) &_HDTSA_MatMult, 2},
    {"_HDTSA_WN_teststatC", (DL_FUNC) &_HDTSA_WN_teststatC, 4},
    {"_HDTSA_WN_ftC", (DL_FUNC) &_HDTSA_WN_ftC, 5},
    {"_HDTSA_WN_XiC", (DL_FUNC) &_HDTSA_WN_XiC, 6},
    {"_HDTSA_WN_bandwith", (DL_FUNC) &_HDTSA_WN_bandwith, 4},
    {"_HDTSA_WN_bootc", (DL_FUNC) &_HDTSA_WN_bootc, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_HDTSA(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
